//! NNTP response codes as defined in RFC 3977.
//!
//! This module provides an enum `ResponseCode` that covers all standard
//! response codes a client may receive from an NNTP server.

/// Enum representing all possible NNTP response codes from RFC 3977.
#[derive(Debug, PartialEq, Eq, Clone, Copy, strum::Display)]
#[repr(u16)]
pub enum ResponseCode {
    /// 100 - Help text follows.
    /// Generated by: HELP
    /// Multi-line: yes
    #[strum(to_string = "100 - Help text follows")]
    HelpTextFollows = 100,

    /// 101 - Capabilities list follows.
    /// Generated by: CAPABILITIES
    /// Multi-line: yes
    #[strum(to_string = "101 - Capabilities list follows")]
    CapabilitiesListFollows = 101,

    /// 111 - Server date and time.
    /// Generated by: DATE
    /// Arguments: 1 (yyyymmddhhmmss)
    /// Multi-line: no
    #[strum(to_string = "111 - Server date and time")]
    ServerDateTime = 111,

    /// 200 - Service available, posting allowed.
    /// Generated by: initial connection, MODE READER
    /// Multi-line: no
    ServiceAvailablePostingAllowed = 200,

    /// 201 - Service available, posting prohibited.
    /// Generated by: initial connection, MODE READER
    /// Multi-line: no
    ServiceAvailablePostingProhibited = 201,

    /// 205 - Connection closing.
    /// Generated by: QUIT
    /// Multi-line: no
    ConnectionClosing = 205,

    /// 211 - Group selected (GROUP) or Article numbers follow (LISTGROUP).
    /// This code has two forms:
    ///
    /// Form 1 (Generated by: GROUP):
    ///   Meaning: Group selected.
    ///   Arguments: 4 (number low high group)
    ///   Multi-line: no
    ///
    /// Form 2 (Generated by: LISTGROUP):
    ///   Meaning: Article numbers follow.
    ///   Arguments: 4 (number low high group)
    ///   Multi-line: yes
    // GroupSelected = 211,
    #[strum(to_string = "211 - Group selected or article numbers follow")]
    ArticleNumbersFollows = 211,

    /// 215 - Information follows.
    /// Generated by: LIST
    /// Multi-line: yes
    #[strum(to_string = "215 - Information follows")]
    InformationFollows = 215,

    /// 220 - Article follows.
    /// Generated by: ARTICLE
    /// Arguments: 2 (n message-id)
    /// Multi-line: yes
    #[strum(to_string = "220 - Article follows")]
    ArticleFollows = 220,

    /// 221 - Article headers follow.
    /// Generated by: HEAD
    /// Arguments: 2 (n message-id)
    /// Multi-line: yes
    #[strum(to_string = "221 - Article headers follow")]
    ArticleHeadersFollows = 221,

    /// 222 - Article body follows.
    /// Generated by: BODY
    /// Arguments: 2 (n message-id)
    /// Multi-line: yes
    #[strum(to_string = "222 - Article body follows")]
    ArticleBodyFollows = 222,

    /// 223 - Article exists and selected.
    /// Generated by: LAST, NEXT, STAT
    /// Arguments: 2 (n message-id)
    /// Multi-line: no
    #[strum(to_string = "223 - Article exists and selected")]
    ArticleExistsAndSelected = 223,

    /// 224 - Overview information follows.
    /// Generated by: OVER
    /// Multi-line: yes
    #[strum(to_string = "224 - Overview information follows")]
    OverviewInformationFollows = 224,

    /// 225 - Headers follow.
    /// Generated by: HDR
    /// Multi-line: yes
    #[strum(to_string = "225 - Headers follow")]
    HeadersFollow = 225,

    /// 230 - List of new articles follows.
    /// Generated by: NEWNEWS
    /// Multi-line: yes
    #[strum(to_string = "230 - List of new articles follows")]
    ListOfNewArticlesFollows = 230,

    /// 231 - List of new newsgroups follows.
    /// Generated by: NEWGROUPS
    /// Multi-line: yes
    #[strum(to_string = "231 - List of new newsgroups follows")]
    ListOfNewNewsgroupsFollows = 231,

    /// 235 - Article transferred OK.
    /// Generated by: IHAVE (second stage)
    /// Multi-line: no
    #[strum(to_string = "235 - Article transferred OK")]
    ArticleTransferredOK = 235,

    /// 240 - Article received OK.
    /// Generated by: POST (second stage)
    /// Multi-line: no
    #[strum(to_string = "240 - Article received OK")]
    ArticleReceivedOK = 240,

    /// 335 - Send article to be transferred.
    /// Generated by: IHAVE (first stage)
    /// Multi-line: no
    #[strum(to_string = "335 - Send article to be transferred")]
    SendArticleToTransfer = 335,

    /// 340 - Send article to be posted.
    /// Generated by: POST (first stage)
    /// Multi-line: no
    #[strum(to_string = "340 - Send article to be posted")]
    SendArticleToPost = 340,

    /// 400 - Service not available or no longer available.
    /// Generated by: initial connection (generic response)
    /// Multi-line: no
    #[strum(to_string = "400 - Service not available or no longer available")]
    Unavailable = 400,

    /// 401 - Server is in the wrong mode.
    /// Generated by: Generic response
    /// Arguments: 1 (capability-label)
    /// Multi-line: no
    #[strum(to_string = "401 - Server is in the wrong mode")]
    ServerWrongMode = 401,

    /// 403 - Internal fault or problem.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "403 - Internal fault or problem")]
    InternalFault = 403,

    /// 411 - No such newsgroup.
    /// Generated by: GROUP, LISTGROUP
    /// Multi-line: no
    #[strum(to_string = "411 - No such newsgroup")]
    NewsgroupNotFound = 411,

    /// 412 - No newsgroup selected.
    /// Generated by: ARTICLE, BODY, GROUP, HDR, HEAD, LAST, LISTGROUP, NEXT, OVER, STAT
    /// Multi-line: no
    #[strum(to_string = "412 - No newsgroup selected")]
    NewsgroupNotSelected = 412,

    /// 420 - Current article number is invalid.
    /// Generated by: ARTICLE, BODY, HDR, HEAD, LAST, NEXT, OVER, STAT
    /// Multi-line: no
    #[strum(to_string = "420 - Current article number is invalid")]
    ArticleNumberInvalid = 420,

    /// 421 - No next article in this group.
    /// Generated by: NEXT
    /// Multi-line: no
    #[strum(to_string = "421 - No next article in this group")]
    NoNextArticle = 421,

    /// 422 - No previous article in this group.
    /// Generated by: LAST
    /// Multi-line: no
    #[strum(to_string = "422 - No previous article in this group")]
    NoPreviousArticle = 422,

    /// 423 - No article with that number or in that range.
    /// Generated by: ARTICLE, BODY, HDR, HEAD, OVER, STAT
    /// Multi-line: no
    #[strum(to_string = "423 - No article with that number or in that range")]
    ArticleNotFound = 423,

    /// 430 - No article with that message-id.
    /// Generated by: ARTICLE, BODY, HDR, HEAD, OVER, STAT
    /// Multi-line: no
    #[strum(to_string = "430 - No article with that message-id")]
    MessageIDNotFound = 430,

    /// 435 - Article not wanted.
    /// Generated by: IHAVE (first stage)
    /// Multi-line: no
    #[strum(to_string = "435 - Article not wanted")]
    ArticleNotWanted = 435,

    /// 436 - Transfer not possible or failed.
    /// Generated by: IHAVE (either stage)
    /// Multi-line: no
    #[strum(to_string = "436 - Transfer not possible or failed")]
    TransferFailed = 436,

    /// 437 - Transfer rejected; do not retry.
    /// Generated by: IHAVE (second stage)
    /// Multi-line: no
    #[strum(to_string = "437 - Transfer rejected; do not retry")]
    TransferRejected = 437,

    /// 440 - Posting not permitted.
    /// Generated by: POST (first stage)
    /// Multi-line: no
    #[strum(to_string = "440 - Posting not permitted")]
    PostingProhibited = 440,

    /// 441 - Posting failed.
    /// Generated by: POST (second stage)
    /// Multi-line: no
    #[strum(to_string = "441 - Posting failed")]
    PostingFailed = 441,

    /// 480 - Command unavailable until authentication.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "480 - Command unavailable until authentication")]
    CommandRequiresAuth = 480,

    /// 483 - Command unavailable until privacy arranged.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "483 - Command unavailable until privacy arranged")]
    CommandRequiresPrivacyArranged = 483,

    /// 500 - Unknown command.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "500 - Unknown command")]
    UnknownCommand = 500,

    /// 501 - Syntax error in command.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "501 - Syntax error in command")]
    SyntaxError = 501,

    /// 502 - Service permanently unavailable or Command not permitted.
    /// Generated by: Initial connection, MODE READER (generic response)
    /// Meaning (initial connection / MODE READER): Service permanently unavailable.
    /// Meaning (all other commands): Command not permitted.
    /// Multi-line: no
    #[strum(to_string = "502 - Service permanently unavailable or Command not permitted")]
    ServiceUnavailable = 502,

    /// 503 - Feature not supported.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "503 - Feature not supported")]
    FeatureNotSupported = 503,

    /// 504 - Error in base64-encoding of an argument.
    /// Generated by: Generic response
    /// Multi-line: no
    #[strum(to_string = "504 - Error in base64-encoding of an argument")]
    ArgumentEncodingError = 504,
}

impl From<ResponseCode> for u16 {
    fn from(item: ResponseCode) -> Self {
        item as u16
    }
}

impl From<ResponseCode> for usize {
    fn from(item: ResponseCode) -> Self {
        item as usize
    }
}

impl From<ResponseCode> for isize {
    fn from(item: ResponseCode) -> Self {
        item as isize
    }
}
